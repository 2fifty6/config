# -*- mode: ruby -*-
# vi: set ft=ruby :

PRIVATE_IP = "10.1.1.10"
# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure(2) do |config|
  config.vm.define "tower" do |tower|
    # The most common configuration options are documented and commented below.
    # For a complete reference, please see the online documentation at
    # https://docs.vagrantup.com.

    # Every Vagrant development environment requires a box. You can search for
    # boxes at https://atlas.hashicorp.com/search.
    tower.vm.box = "tower"
    tower.vm.host_name = "tower"

    # The url from where the 'tower.vm.box' box will be fetched if it
    # doesn't already exist on the user's system.
    tower.vm.box_url = "http://vms.ansible.com/ansible-tower-2.2.0-virtualbox.box"

    # Create a forwarded port mapping which allows access to a specific port
    # within the machine from a port on the host machine. In the example below,
    # accessing "localhost:8080" will access port 80 on the guest machine.
    tower.vm.network "forwarded_port", guest: 443, host: 4443

    # Create a private network, which allows host-only access to the machine
    # using a specific IP.
    tower.vm.network :private_network, ip: PRIVATE_IP

    # Create a public network, which generally matched to bridged network.
    # Bridged networks make the machine appear as another physical device on
    # your network.
    # tower.vm.network "public_network"

    # Share an additional folder to the guest VM. The first argument is
    # the path on the host to the actual folder. The second argument is
    # the path on the guest to mount the folder. And the optional third
    # argument is a set of non-required options.
    tower.vm.synced_folder "/home/dswartz/Projects", "/usr/local/share/ansible"

    # Provider-specific configuration so you can fine-tune various
    # backing providers for Vagrant. These expose provider-specific options.
    # Example for VirtualBox:
    #
    tower.vm.provider "virtualbox" do |vb|
      # Display the VirtualBox GUI when booting the machine
      #vb.gui = true

      # Customize the amount of memory on the VM:
      vb.memory = "4096"

      vb.customize ["modifyvm", :id, "--natdnshostresolver1", "on"]
    end
    #
    # View the documentation for the provider you are using for more
    # information on available options.

    # Define a Vagrant Push strategy for pushing to Atlas. Other push strategies
    # such as FTP and Heroku are also available. See the documentation at
    # https://docs.vagrantup.com/v2/push/atlas.html for more information.
    # config.push.define "atlas" do |push|
    #   push.app = "YOUR_ATLAS_USERNAME/YOUR_APPLICATION_NAME"
    # end

    # Enable provisioning with a shell script. Additional provisioners such as
    # Puppet, Chef, Ansible, Salt, and Docker are also available. Please see the
    # documentation for more information about their specific syntax and use.
    tower.vm.provision "shell", inline: <<-SHELL
      # disable fastestmirror
      sudo sed -i 's/enabled=1/enabled=0/' /etc/yum/pluginconf.d/fastestmirror.conf
    SHELL

    LOCAL_DIR = File.expand_path( File.dirname(__FILE__) ) << "/.."
    REMOTE_DIR = LOCAL_DIR.sub( ENV['LOGNAME'], 'vagrant' )

    tower.vm.provision "ansible" do |ansible|
      ansible.extra_vars = { local_dir: LOCAL_DIR, remote_dir: REMOTE_DIR }
      ansible.playbook = "../playbooks/ansiblize.yml"
    end
  end
end

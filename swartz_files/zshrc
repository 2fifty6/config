# ssh agent forwarding
#eval `ssh-agent` >/dev/null 2>&1
#find ~/.ssh -type f -name '*_rsa' | xargs ssh-add > /dev/null 2>&1
#find ~/.ssh -type f -name '*.pem' | xargs ssh-add > /dev/null 2>&1
# Oh My ZSH!
if [[ -z $OH_MY_ZSHED ]]; then
  . ~/.oh-my-zshrc
  export OH_MY_ZSHED="done"
fi

source ~/.zprompt
setprompt

# OS X
if [[ `uname` == "Darwin" ]]; then
  alias ls='ls -G '
  alias grep='grep --color=always'
  alias showhidden="defaults write com.apple.Finder AppleShowAllFiles YES && killall Finder"
  alias hidehidden="defaults write com.apple.Finder AppleShowAllFiles NO && killall Finder"
  # homebrew
  [[ -z "`which wget`" ]] && brew install wget
  [[ -z "`which brew`" ]] && ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
  # Various Plugins
  [[ ! -e /usr/local/share/zsh/site-functions/_aws ]] && (brew install awscli >/dev/null 2>&1 || brew link --overwrite awscli)
  . /usr/local/share/zsh/site-functions/_aws 2>/dev/null
fi

# Ctrl-S is a pain in the ass
stty -ixon

#--------------------------------------------------------------------------------------
PATH=$PATH:/usr/local/bin:/usr/local/scripts:~/scripts

# include any bashrc stuff we don't want to version control
[[ -e ~/.initSwaaatz ]] && source ~/.initSwaaatz
[[ -e ~/.dotfiles/lib/zsh-autoenv/autoenv.zsh ]] && source ~/.dotfiles/lib/zsh-autoenv/autoenv.zsh

for script in `ls ~/.dotfiles/initscripts`; do source ~/.dotfiles/initscripts/$script; done

# CONVENIENCE
alias ltr='ls -ltr'
function grepv () { grep "$@" | grep -v --color grep }
function psgrep () { ps aux | grep "$@" | grep -v --color grep }
function fromnow (){ date -v+$1 "+%Y-%m-%d" }
function suniq(){
  sort | uniq <&3
}

function shdo () {
  FULLCMD=($*)
  CMD="$1" ARGS=${FULLCMD[@]:1}
  echo -en "\e[01m* $CMD $ARGS\e[0m"
  NUMTABS=$((`tput cols`/8 - 2))
  echo -ne "\r"
  for X in {1..$NUMTABS}
  do
    echo -ne "\t"
  done
  echo -e "    \e[0;1m[ \e[32m`date +%T` \e[0;1m]\e[0m"
  eval $CMD $ARGS
  RC=$?
  if [ $RC -eq 0 ]
  then
    echo -e "[ \e[32mOK\e[0m ]"
  else
    echo -e "[ \e[01;31mFAIL\e[0m ] ($RC)"
  fi
}

test -e "${HOME}/.iterm2_shell_integration.zsh" && source "${HOME}/.iterm2_shell_integration.zsh"
